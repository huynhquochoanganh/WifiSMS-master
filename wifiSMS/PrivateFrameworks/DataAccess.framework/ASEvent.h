/* Generated by RuntimeBrowser on iPhone OS 3.0
   Image: /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess
 */

@class NSArray, NSString, ASRecurrence, ASTimeZone, ASEventUID, NSDate, NSNumber;



@interface ASEvent : ASChangedCollectionLeaf <NSCoding, ASDataElement>
{
    void *_calRecord;
    ASTimeZone *_timeZone;
    NSNumber *_allDayEvent;
    NSString *_body;
    NSNumber *_bodyTruncated;
    NSNumber *_busyStatus;
    NSDate *_dTStamp;
    NSDate *_endTime;
    NSString *_location;
    NSNumber *_meetingStatus;
    NSString *_organizerEmail;
    NSString *_organizerName;
    NSNumber *_reminderMinsBefore;
    NSNumber *_sensitivity;
    NSString *_subject;
    NSDate *_startTime;
    ASEventUID *_eventUID;
    NSArray *_attendees;
    NSArray *_attendeesPendingDeletion;
    ASRecurrence *_recurrence;
    NSArray *_exceptions;
    NSNumber *_responseRequested;
    NSInteger _meetingResponseToEmailAbout;
    BOOL _calculateNextStatusAsIfMeetingRequest;
    BOOL _shouldUpdateStatus;
    BOOL _cachedOrganizerIsSelf;
    BOOL _haveCheckedOrganizerEmail;
    BOOL _isAttendeeUpdateOnly;
    BOOL _isDTStampUpdateOnly;
}

@property(retain) NSNumber *responseRequested; /* unknown property attribute: V_responseRequested */
@property(retain) NSArray *attendeesPendingDeletion; /* unknown property attribute: V_attendeesPendingDeletion */
@property(retain) ASEventUID *eventUID; /* unknown property attribute: V_eventUID */
@property(retain) NSArray *exceptions; /* unknown property attribute: V_exceptions */
@property(retain) ASRecurrence *recurrence; /* unknown property attribute: V_recurrence */
@property(retain) NSArray *attendees; /* unknown property attribute: V_attendees */
@property(retain) NSDate *startTime; /* unknown property attribute: V_startTime */
@property(retain) NSString *subject; /* unknown property attribute: V_subject */
@property(retain) NSNumber *sensitivity; /* unknown property attribute: V_sensitivity */
@property(retain) NSNumber *reminderMinsBefore; /* unknown property attribute: V_reminderMinsBefore */
@property(retain) NSString *organizerName; /* unknown property attribute: V_organizerName */
@property(retain) NSString *organizerEmail; /* unknown property attribute: V_organizerEmail */
@property(retain) NSNumber *meetingStatus; /* unknown property attribute: V_meetingStatus */
@property(retain) NSString *location; /* unknown property attribute: V_location */
@property(retain) NSDate *endTime; /* unknown property attribute: V_endTime */
@property(retain) NSDate *dTStamp; /* unknown property attribute: V_dTStamp */
@property(retain) NSNumber *busyStatus; /* unknown property attribute: V_busyStatus */
@property(retain) NSNumber *bodyTruncated; /* unknown property attribute: V_bodyTruncated */
@property(retain) NSString *body; /* unknown property attribute: V_body */
@property(retain) NSNumber *allDayEvent; /* unknown property attribute: V_allDayEvent */
@property(retain) ASTimeZone *timeZone; /* unknown property attribute: V_timeZone */

+ (BOOL)acceptsTopLevelLeaves;
+ (BOOL)parsingLeafNode;
+ (BOOL)parsingWithSubItems;
+ (BOOL)frontingBasicTypes;
+ (id)eventWithCalEvent:(void*)arg1 serverID:(id)arg2 account:(id)arg3;
+ (void)_setFakeDTStampDateForUnitTests:(id)arg1;

- (id)_transformedStartDateForCalFramework:(id)arg1;
- (id)_transformedEndDateForCalFramework:(id)arg1 startDate:(id)arg2;
- (id)_transformedStartDateForActiveSync:(id)arg1;
- (id)_transformedEndDateForActiveSync:(id)arg1;
- (id)timeZoneNameForCalFramework;
- (id)asParseRules;
- (NSInteger)classType;
- (id)uidGeneratedIfNecessaryWithLocalEvent:(void*)arg1;
- (void)_loadAttributesFromCalEvent:(void*)arg1 forAccount:(id)arg2;
- (id)init;
- (id)initWithCalEvent:(void*)arg1 serverID:(id)arg2 account:(id)arg3;
- (BOOL)hasLocalModifications:(void*)arg1;
- (void)dealloc;
- (id)description;
- (NSInteger)calEventStatus;
- (NSInteger)calEventExternalStatus;
- (NSInteger)_nextEventStatusWithOldStatus:(NSInteger)arg1 meetingClassType:(NSInteger)arg2;
- (NSInteger)_nextEventStatusWithOldStatus:(NSInteger)arg1;
- (NSInteger)_meetingResponseShouldFilterForEmail:(BOOL)arg1;
- (NSInteger)meetingResponse;
- (NSInteger)meetingResponseForEmail;
- (void)setMeetingResponseForEmail:(NSInteger)arg1;
- (BOOL)_bailIfNotNewestData;
- (BOOL)shouldUseInMemoryAttendeesForAccount:(id)arg1 numExistingAttendees:(NSInteger)arg2;
- (void)_updateDTStampOnly;
- (BOOL)saveToCalendarWithExistingRecord:(void*)arg1 intoCalendar:(void*)arg2 treatNullsAsDeletes:(BOOL)arg3 account:(id)arg4;
- (BOOL)_shouldKeepLocalExceptions;
- (void)_sanitizeLocalExceptionsForAccount:(id)arg1;
- (BOOL)saveDetachedEventsWithExistingRecord:(void*)arg1 intoCalendar:(void*)arg2 treatNullsAsDeletes:(BOOL)arg3 account:(id)arg4;
- (void)informExceptionsThatParentIsReadyForAccount:(id)arg1;
- (void)_determineSelfnessWithLocalEvent:(void*)arg1 forAccount:(id)arg2;
- (void)postProcessApplicationData;
- (void)parseASParseContext:(id)arg1 root:(id)arg2 parent:(id)arg3 callbackDict:(id)arg4 streamCallbackDict:(id)arg5 account:(id)arg6;
- (BOOL)deleteFromCalendar;
- (void)appendActiveSyncDataForTask:(id)arg1 toWBXMLData:(id)arg2;
- (void)setCalEvent:(void*)arg1;
- (BOOL)loadCalRecordForAccount:(id)arg1;
- (void*)calEvent;
- (BOOL)saveServerIDToCalendar;
- (void)loadClientIDs;
- (id)startDateForCalFramework;
- (id)endDateForCalFramework;
- (id)uidForCalFramework;
- (id)eventUID;
- (void)setEventUID:(id)arg1;
- (id)exceptionDate;
- (void)setExceptionDate:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)setBody:(id)arg1;
- (BOOL)cachedOrganizerIsSelf;
- (id)fullOrganizerString;
- (BOOL)purgeAttendeesPendingDeletion;
- (BOOL)hasOccurrenceInTheFuture;
- (BOOL)saveWithLocalObject:(void*)arg1 toContainer:(void*)arg2 treatNullsAsDeletes:(BOOL)arg3 account:(id)arg4;
- (BOOL)saveAfterMapWithLocalObject:(void*)arg1 toContainer:(void*)arg2 treatNullsAsDeletes:(BOOL)arg3 account:(id)arg4;
- (BOOL)hasLocalModificationsWithLocalObject:(void*)arg1;
- (void)setLocalItem:(void*)arg1;
- (BOOL)loadLocalItemWithAccount:(id)arg1;
- (BOOL)saveServerIDToExistingItem;
- (BOOL)deleteFromContainer:(void*)arg1;
- (void)setCalculateNextStatusAsIfMeetingRequest:(BOOL)arg1;
- (void)setShouldUpdateStatus:(BOOL)arg1;
- (BOOL)_selfIsMoreCorrectThanOtherEvent:(id)arg1;
- (BOOL)isEqualToEvent:(id)arg1;
- (id)eventByMergingInLosingEvent:(id)arg1;
- (id)eventByMergingInEvent:(id)arg1;
- (void)setExceptions:(id)arg1;
- (void)setRecurrence:(id)arg1;
- (id)responseRequested;
- (void)setResponseRequested:(id)arg1;
- (id)attendeesPendingDeletion;
- (void)setAttendeesPendingDeletion:(id)arg1;
- (id)exceptions;
- (id)recurrence;
- (id)attendees;
- (void)setAttendees:(id)arg1;
- (id)startTime;
- (void)setStartTime:(id)arg1;
- (id)subject;
- (void)setSubject:(id)arg1;
- (id)sensitivity;
- (void)setSensitivity:(id)arg1;
- (id)reminderMinsBefore;
- (void)setReminderMinsBefore:(id)arg1;
- (id)organizerName;
- (void)setOrganizerName:(id)arg1;
- (id)organizerEmail;
- (void)setOrganizerEmail:(id)arg1;
- (id)meetingStatus;
- (void)setMeetingStatus:(id)arg1;
- (id)location;
- (void)setLocation:(id)arg1;
- (id)endTime;
- (void)setEndTime:(id)arg1;
- (id)dTStamp;
- (void)setDTStamp:(id)arg1;
- (id)busyStatus;
- (void)setBusyStatus:(id)arg1;
- (id)bodyTruncated;
- (void)setBodyTruncated:(id)arg1;
- (id)body;
- (id)allDayEvent;
- (void)setAllDayEvent:(id)arg1;
- (id)timeZone;
- (void)setTimeZone:(id)arg1;

@end
