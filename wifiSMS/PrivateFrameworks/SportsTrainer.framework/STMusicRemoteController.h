/* Generated by RuntimeBrowser on iPhone OS 3.0
   Image: /System/Library/PrivateFrameworks/SportsTrainer.framework/SportsTrainer
 */

@class NSMachPort, NSArray, NSString, STPlayerConnection;



@interface STMusicRemoteController : NSObject 
{
    NSArray *_playlists;
    NSArray *_workoutMixes;
    STPlayerConnection *_playerConnection;
    NSInteger _musicSelection;
    NSInteger _currentSeekDirection;
    NSString *_latestSelectedPlaylistName;
    NSMachPort *_nowPlayingInfoChangedPort;
    NSInteger _nowPlayingInfoChangedNotificationToken;
}

@property NSInteger musicSelection;
@property(readonly) BOOL shouldControlMusic;
@property(copy) NSString *latestSelectedPlaylistName; /* unknown property attribute: V_latestSelectedPlaylistName */

+ (id)sharedMusicController;
+ (void)clearCachedDatabaseData;

- (id)init;
- (id)_init;
- (void)dealloc;
- (void)setMusicSelection:(NSInteger)arg1;
- (NSInteger)musicSelection;
- (void)setCanLaunchPlayer:(BOOL)arg1;
- (BOOL)isNowPlaying;
- (id)currentSongName;
- (void)goToNowPlaying;
- (BOOL)beginSeek:(NSInteger)arg1;
- (BOOL)endSeek:(NSInteger)arg1;
- (BOOL)shouldControlMusic;
- (void)selectPreviousSong;
- (void)selectNextSong;
- (void)play;
- (void)pause;
- (void)_releaseRemoteCachedData;
- (id)workoutMixes;
- (id)playlists;
- (void)startWorkoutMixWithPersistentUID:(unsigned long long)arg1;
- (void)startPlaylistWithPersistentUID:(unsigned long long)arg1;
- (void)startWorkoutMixAtIndex:(NSUInteger)arg1;
- (void)startPlaylistAtIndex:(NSUInteger)arg1;
- (void)startShuffleSongs;
- (void)interruptPlaybackForTrackUID:(id)arg1;
- (unsigned long long)persistentUIDForPlaylistIndex:(NSUInteger)arg1;
- (unsigned long long)persistentUIDForWorkoutMixIndex:(NSUInteger)arg1;
- (NSUInteger)_activePlayerControlConnection;
- (void)_startPlaylistWithPersistentUID:(unsigned long long)arg1 isWorkoutMix:(BOOL)arg2;
- (void)_startPlaylistAtIndex:(NSUInteger)arg1 isWorkoutMix:(BOOL)arg2;
- (unsigned long long)_persistentUIDForPlaylistIndex:(NSUInteger)arg1 isWorkoutMix:(BOOL)arg2;
- (void)_registerForNowPlayingInfoChangeNotifications;
- (void)_unregisterForNowPlayingInfoChangeNotifications;
- (void)_nowPlayingInfoChangePortInvalidated:(id)arg1;
- (void)handleMachMessage:(void*)arg1;
- (id)latestSelectedPlaylistName;
- (void)setLatestSelectedPlaylistName:(id)arg1;

@end
