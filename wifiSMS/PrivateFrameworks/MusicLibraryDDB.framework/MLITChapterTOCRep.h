/* Generated by RuntimeBrowser on iPhone OS 3.0
   Image: /System/Library/PrivateFrameworks/MusicLibraryDDB.framework/MusicLibraryDDB
 */

@class MLTrack;



@interface MLITChapterTOCRep : MLChapterTOC 
{
    MLTrack *_track;
    struct ChapterData { } *_chapterDataRef;
    NSUInteger *_picCookieIndexMap;
    NSUInteger *_urlCookieIndexMap;
    NSUInteger *_nameCookieIndexMap;
}

+ (NSUInteger**)_chapterDataCookieIndexMapForProperty:(NSInteger)arg1 ofChapterTOC:(id)arg2;

- (id)initWithChapterDataRef:(struct ChapterData { }*)arg1 track:(id)arg2;
- (struct ChapterData { }*)chapterDataRef;
- (void)dealloc;
- (NSUInteger)countOfChapters;
- (NSUInteger*)_cachedCookieIndexMapForProperty:(NSInteger)arg1 createIfNecessary:(BOOL)arg2;
- (NSUInteger)countOfGroupsForProperty:(NSInteger)arg1;
- (NSUInteger)chapterIndexForGroupIndex:(NSUInteger)arg1 groupingProperty:(NSInteger)arg2;
- (NSUInteger)groupIndexForChapterIndex:(NSUInteger)arg1 groupingProperty:(NSInteger)arg2;
- (NSUInteger)totalTimeInMS;
- (NSUInteger)durationInMSOfGroupAtIndex:(NSUInteger)arg1 groupingProperty:(NSInteger)arg2;
- (NSUInteger)groupIndexAtTimeLocationInMS:(NSUInteger)arg1 groupingProperty:(NSInteger)arg2;
- (NSUInteger)timeLocationInMSOfGroupAtIndex:(NSUInteger)arg1 groupingProperty:(NSInteger)arg2;
- (NSUInteger)durationInMSOfChapterAtIndex:(NSUInteger)arg1;
- (NSUInteger)timeLocationInMSOfChapterAtIndex:(NSUInteger)arg1;
- (id)titlePropertyOfChapterAtIndex:(NSUInteger)arg1;
- (id)urlTitlePropertyOfChapterAtIndex:(NSUInteger)arg1;
- (id)urlPropertyOfChapterAtIndex:(NSUInteger)arg1;
- (id)imageDataForArtworkFormatID:(NSUInteger)arg1 size:(struct CGSize { float x1; float x2; })arg2 artworkChapterIndex:(NSUInteger)arg3 artworkInstanceInfo:(struct MLArtworkInstanceInfo { struct MLArtworkFormatSpec { NSUInteger x_1_1_1; NSUInteger x_1_1_2; NSUInteger x_1_1_3; NSUInteger x_1_1_4; NSInteger x_1_1_5; NSInteger x_1_1_6; } x1; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_2_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_2_1_2; } x2; }*)arg4;
- (id)availableArtworkFormatIDsForArtworkGroupChapterIndex:(NSUInteger)arg1;
- (id)getImageWithArtworkFormatID:(NSUInteger)arg1 size:(struct CGSize { float x1; float x2; })arg2 chapterIndex:(NSUInteger)arg3 artworkInstanceInfo:(struct MLArtworkInstanceInfo { struct MLArtworkFormatSpec { NSUInteger x_1_1_1; NSUInteger x_1_1_2; NSUInteger x_1_1_3; NSUInteger x_1_1_4; NSInteger x_1_1_5; NSInteger x_1_1_6; } x1; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_2_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_2_1_2; } x2; }*)arg4;
- (id)imageDataForArtworkFormatID:(NSUInteger)arg1 chapterIndex:(NSUInteger)arg2 artworkInstanceInfo:(struct MLArtworkInstanceInfo { struct MLArtworkFormatSpec { NSUInteger x_1_1_1; NSUInteger x_1_1_2; NSUInteger x_1_1_3; NSUInteger x_1_1_4; NSInteger x_1_1_5; NSInteger x_1_1_6; } x1; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_2_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_2_1_2; } x2; }*)arg3;
- (id)bestImageDataForSize:(struct CGSize { float x1; float x2; })arg1 chapterIndex:(NSUInteger)arg2 artworkInstanceInfo:(struct MLArtworkInstanceInfo { struct MLArtworkFormatSpec { NSUInteger x_1_1_1; NSUInteger x_1_1_2; NSUInteger x_1_1_3; NSUInteger x_1_1_4; NSInteger x_1_1_5; NSInteger x_1_1_6; } x1; struct CGRect { struct CGPoint { float x_1_2_1; float x_1_2_2; } x_2_1_1; struct CGSize { float x_2_2_1; float x_2_2_2; } x_2_1_2; } x2; }*)arg3;
- (id)availableArtworkFormatIDsForChapterIndex:(NSUInteger)arg1;

@end
