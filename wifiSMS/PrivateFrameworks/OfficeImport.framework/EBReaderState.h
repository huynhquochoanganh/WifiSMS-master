/* Generated by RuntimeBrowser on iPhone OS 3.0
   Image: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class EDSheet, ECColumnWidthConvertor, OABState;



@interface EBReaderState : EBState 
{

  /* Error parsing encoded ivar type info: ^{XlBinaryReader=^^?^^?^^?^{EshObjectFactory}B^{SsrwOORootStorage}^{SsrwOOStorage}{XlEshBinaryReader="_vptr$EshBinaryReader"^^?"m_pStream"^{SsrwOOStream}"m_pParserVisitor"^{EshParserVisitor}"m_pObjectFactory"^{EshObjectFactory}"m_ulStartPos"I"m_ulEndPos"I"m_containers"{ChStack<EshHeader>="m_stack"^{EshHeader}"m_tmpStack"^{EshHeader}"m_count"I"m_size"I"m_blockSize"I}"m_ulCrtPos"I"m_nextHeader"{EshHeader="m_lLength"i"m_ulOffset"I"m_nInstance"s"m_unType"S"m_bVersion"C}"m_isLowLevel"B"m_isPatriarchRead"B"m_ulFragmentBoundary"I"m_pBiffStream"^{XlReadStgStream}}^{XlStringExtractor}^{XlSheetInfoTable}iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiBBB{ChVector<long int>="m_vector"^l"m_tmpVector"^l"m_count"I"m_size"I"m_blockSize"I}{ChVector<long int>="m_vector"^l"m_tmpVector"^l"m_count"I"m_size"I"m_blockSize"I}{ChVector<long int>="m_vector"^l"m_tmpVector"^l"m_count"I"m_size"I"m_blockSize"I}^{XlIndex}^{XlRow}^{XlRecord}iisii{ChVector<XlCell*>="m_vector"^^{XlCell}"m_tmpVector"^^{XlCell}"m_count"I"m_size"I"m_blockSize"I}iCi{XlWorksheetProperties="_vptr$XlWorksheetProperties"^^?"m_unDefaultColWidth"S"m_lStandardColWidth"i"m_unDefaultRowHeight"S"m_isGridChanged"B"m_unRowGutter"S"m_unColGutter"S"m_unRowOutlineMax"S"m_unColOutlineMax"S"m_isUndefRowUnsynced"B"m_isUndefRowZero"B"m_isUndefRowExAscent"B"m_isUndefRowExDescent"B"m_isShowAutoPgBreaks"B"m_isIntlMacro"B"m_isDialog"B"m_isOutlineAutoStyle"B"m_isRowSumsBelow"B"m_isColSumsRight"B"m_isFitToPage"B"m_isDisplayGuts"B"m_isAltExprEval"B"m_isAltFmlaEntry"B"m_isPrintHeadings"B"m_isPrintGrid"B"m_nTabColorIdx"s"m_pHorizPgBreaks"{ChVector<XlBrk*>="m_vector"^^{XlBrk}"m_tmpVector"^^{XlBrk}"m_count"I"m_size"I"m_blockSize"I}"m_pVertPgBreaks"{ChVector<XlBrk*>="m_vector"^^{XlBrk}"m_tmpVector"^^{XlBrk}"m_count"I"m_size"I"m_blockSize"I}"m_objectName"{OcText="_vptr$OcText"^^?"m_encoding"i"m_ulStartCP"I"m_ulCharacterCount"I"m_ulBufferSize"I"m_pBuffer"*"m_pTempBuffer"*"m_isMyBuffer"B}}{XlWorksheetProtection="_vptr$XlWorksheetProtection"^^?"m_isLockContent"B"m_isLockScenario"B"m_isLockObj"B"m_isEditObjects"B"m_isEditScenarios"B"m_isChangeCellFormatting"B"m_isChangeColumnFormatting"B"m_isChangeRowFormatting"B"m_isInsertColumns"B"m_isInsertRow"B"m_isInsertHyperlinks"B"m_isDeleteColumns"B"m_isDeleteRows"B"m_isSelectLockedCells"B"m_isSortCellRange"B"m_isEditAutoFilters"B"m_isEditPivotTables"B"m_isSelectUnlockedCells"B"m_nPassword"s}{XlCalculationProperties="_vptr$XlCalculationProperties"^^?"m_dIncrementMax"d"m_autoRecalcMode"i"m_nIterationMax"s"m_isIterationOn"B"m_referenceStyle"i"m_isRecalcSave"B}{XlSortInfo="_vptr$XlSortInfo"^^?"m_isSortLtoR"B"m_isKey1Dsc"B"m_isKey2Dsc"B"m_isKey3Dsc"B"m_isCaseSensitive"B"m_isAltMethod"B"m_bOrderIndex"C"m_key1String"{OcText="_vptr$OcText"^^?"m_encoding"i"m_ulStartCP"I"m_ulCharacterCount"I"m_ulBufferSize"I"m_pBuffer"*"m_pTempBuffer"*"m_isMyBuffer"B}"m_key2String"{OcText="_vptr$OcText"^^?"m_encoding"i"m_ulStartCP"I"m_ulCharacterCount"I"m_ulBufferSize"I"m_pBuffer"*"m_pTempBuffer"*"m_isMyBuffer"B}"m_key3String"{OcText="_vptr$OcText"^^?"m_encoding"i"m_ulStartCP"I"m_ulCharacterCount"I"m_ulBufferSize"I"m_pBuffer"*"m_pTempBuffer"*"m_isMyBuffer"B}}{XlDocumentInfo="_vptr$XlDocumentInfo"^^?"m_unBuildID"S"m_unBuildYear"S"m_lLowestVersion"i"m_isWrittenByWin"B"m_isWrittenByRisc"B"m_isWrittenByBeta"B"m_isEditedByWin"B"m_isEditedByMac"B"m_isEditedByBeta"B"m_isEditedByRisc"B"m_is0x40"B}{XlDocumentProperties="_vptr$XlDocumentProperties"^^?"m_unDateBase"S"m_nCodePage"s"m_nCountry"i"m_isExcel9File"B"m_isUsingElfs"B"m_isFullPrecision"B"m_isRefreshAll"B"m_isNoSaveSupp"B"m_hasMailEnvelope"B"m_isMailEnvelopeVisible"B"m_isVBProject"B"m_lRecalcEngineID"i"m_nTabCount"s"m_pTabIdTable"^s"m_workbookName"{OcText="_vptr$OcText"^^?"m_encoding"i"m_ulStartCP"I"m_ulCharacterCount"I"m_ulBufferSize"I"m_pBuffer"*"m_pTempBuffer"*"m_isMyBuffer"B}"m_objectShow"i"m_oleSize"{XlRef="m_nRowFirst"S"m_nRowLast"S"m_nColFirst"s"m_nColLast"s"m_isCompact"B}"m_isHaveOleSize"B}{XlDocumentProtection="_vptr$XlDocumentProtection"^^?"m_isLockContent"B"m_isLockWindow"B"m_isLockShare"B"m_nPassword"s"m_nSharePassword"s}{XlFileProtection="_vptr$XlFileProtection"^^?"m_lFilePassword"i"m_isWriteProtected"B"m_isReadOnlyLoad"B"m_nWritePassword"s"m_creatorName"{OcText="_vptr$OcText"^^?"m_encoding"i"m_ulStartCP"I"m_ulCharacterCount"I"m_ulBufferSize"I"m_pBuffer"*"m_pTempBuffer"*"m_isMyBuffer"B}"m_ownerName"{OcText="_vptr$OcText"^^?"m_encoding"i"m_ulStartCP"I"m_ulCharacterCount"I"m_ulBufferSize"I"m_pBuffer"*"m_pTempBuffer"*"m_isMyBuffer"B}"m_pTempBuffer"*}{XlSubstreamProperties="_vptr$XlSubstreamProperties"^^?"m_subStreamInfo"{XlSheetInfo="_vptr$XlSheetInfo"^^?"m_substreamType"i"m_lRowBlockCount"i}"m_pageInfo"{XlPageProperties="_vptr$XlPageProperties"^^?"m_dBottomMargin"d"m_dTopMargin"d"m_dLeftMargin"d"m_dRightMargin"d"m_pHeaderString"^{OcText}"m_pFooterString"^{OcText}"m_isHorizCentered"B"m_isVertCentered"B"m_nPaperSize"s"m_nScaleFactor"s"m_nPageStartNumber"s"m_nPrintFitToWidth"s"m_nPrintFitToHeight"s"m_isPrintLeftToRight"B"m_printLandscape"i"m_isPrintNoPls"B"m_isPrintNoColor"B"m_isPrintDraft"B"m_isPrintNotes"B"m_isPrintNoOrient"B"m_isPrintPageNoAuto"B"m_nPrintResolution"s"m_nPrintVertResolution"s"m_nPrintCopyCount"s"m_dPrintHeaderMargin"d"m_dPrintFooterMargin"d"m_nPrintSize"s}"m_cellTableInfo"{XlCellTableInfo="_vptr$XlCellTableInfo"^^?"m_lRowMin"i"m_lRowMax"i"m_unColumnMin"S"m_unColumnMax"S}"m_lGraphicsLoc"i"m_lEsherLoc"i}^{XlRecord}^{SsrwOOStream}C^{XlObjectFactory}^{XlParserVisitor}^^?^{EshObjectFactory}} */
    struct XlBinaryReader { int (**x1)(); int (**x2)(); int (**x3)(); struct EshObjectFactory {} *x4; /* Warning: Unrecognized filer type: 'B' using 'void*' */ void*x5; struct SsrwOORootStorage {} *x6; struct SsrwOOStorage {} *x7; struct XlEshBinaryReader { 
            int (**_vptr$EshBinaryReader)(); 
            struct SsrwOOStream {} *m_pStream; 
            struct EshParserVisitor {} *m_pParserVisitor; 
            struct EshObjectFactory {} *m_pObjectFactory; 
            NSUInteger m_ulStartPos; 
            NSUInteger m_ulEndPos; 
            struct ChStack<EshHeader> { 
                struct EshHeader {} *m_stack; 
                struct EshHeader {} *m_tmpStack; 
                NSUInteger m_count; 
                NSUInteger m_size; 
                NSUInteger m_blockSize; 
            } m_containers; 
            NSUInteger m_ulCrtPos; 
            struct EshHeader { 
                NSInteger m_lLength; 
                NSUInteger m_ulOffset; 
                short m_nInstance; 
                unsigned short m_unType; 
                unsigned char m_bVersion; 
            } m_nextHeader; 
            void*m_isLowLevel; 
            void*m_isPatriarchRead; 
            NSUInteger m_ulFragmentBoundary; 
            struct XlReadStgStream {} *m_pBiffStream; 
        } x8; struct XlStringExtractor {} *x9; struct XlSheetInfoTable {} *x10; NSInteger x11; NSInteger x12; NSInteger x13; NSInteger x14; NSInteger x15; NSInteger x16; NSInteger x17; NSInteger x18; NSInteger x19; NSInteger x20; NSInteger x21; NSInteger x22; NSInteger x23; NSInteger x24; NSInteger x25; NSInteger x26; NSInteger x27; NSInteger x28; NSInteger x29; NSInteger x30; NSInteger x31; NSInteger x32; NSInteger x33; NSInteger x34; NSInteger x35; NSInteger x36; NSInteger x37; NSInteger x38; NSInteger x39; NSInteger x40; NSInteger x41; NSInteger x42; void*x43; void*x44; void*x45; struct ChVector<long int> { 
            long *m_vector; 
            long *m_tmpVector; 
            NSUInteger m_count; 
            NSUInteger m_size; 
            NSUInteger m_blockSize; 
        } x46; struct ChVector<long int> { 
            long *m_vector; 
            long *m_tmpVector; 
            NSUInteger m_count; 
            NSUInteger m_size; 
            NSUInteger m_blockSize; 
        } x47; struct ChVector<long int> { 
            long *m_vector; 
            long *m_tmpVector; 
            NSUInteger m_count; 
            NSUInteger m_size; 
            NSUInteger m_blockSize; 
        } x48; struct XlIndex {} *x49; struct XlRow {} *x50; struct XlRecord {} *x51; NSInteger x52; NSInteger x53; short x54; NSInteger x55; NSInteger x56; struct ChVector<XlCell*> { 
            struct XlCell {} **m_vector; 
            struct XlCell {} **m_tmpVector; 
            NSUInteger m_count; 
            NSUInteger m_size; 
            NSUInteger m_blockSize; 
        } x57; NSInteger x58; unsigned char x59; NSInteger x60; struct XlWorksheetProperties { 
            int (**_vptr$XlWorksheetProperties)(); 
            unsigned short m_unDefaultColWidth; 
            NSInteger m_lStandardColWidth; 
            unsigned short m_unDefaultRowHeight; 
            void*m_isGridChanged; 
            unsigned short m_unRowGutter; 
            unsigned short m_unColGutter; 
            unsigned short m_unRowOutlineMax; 
            unsigned short m_unColOutlineMax; 
            void*m_isUndefRowUnsynced; 
            void*m_isUndefRowZero; 
            void*m_isUndefRowExAscent; 
            void*m_isUndefRowExDescent; 
            void*m_isShowAutoPgBreaks; 
            void*m_isIntlMacro; 
            void*m_isDialog; 
            void*m_isOutlineAutoStyle; 
            void*m_isRowSumsBelow; 
            void*m_isColSumsRight; 
            void*m_isFitToPage; 
            void*m_isDisplayGuts; 
            void*m_isAltExprEval; 
            void*m_isAltFmlaEntry; 
            void*m_isPrintHeadings; 
            void*m_isPrintGrid; 
            short m_nTabColorIdx; 
            struct ChVector<XlBrk*> { 
                struct XlBrk {} **m_vector; 
                struct XlBrk {} **m_tmpVector; 
                NSUInteger m_count; 
                NSUInteger m_size; 
                NSUInteger m_blockSize; 
            } m_pHorizPgBreaks; 
            struct ChVector<XlBrk*> { 
                struct XlBrk {} **m_vector; 
                struct XlBrk {} **m_tmpVector; 
                NSUInteger m_count; 
                NSUInteger m_size; 
                NSUInteger m_blockSize; 
            } m_pVertPgBreaks; 
            struct OcText { 
                int (**_vptr$OcText)(); 
                NSInteger m_encoding; 
                NSUInteger m_ulStartCP; 
                NSUInteger m_ulCharacterCount; 
                NSUInteger m_ulBufferSize; 
                char *m_pBuffer; 
                char *m_pTempBuffer; 
                void*m_isMyBuffer; 
            } m_objectName; 
        } x61; struct XlWorksheetProtection { 
            int (**_vptr$XlWorksheetProtection)(); 
            void*m_isLockContent; 
            void*m_isLockScenario; 
            void*m_isLockObj; 
            void*m_isEditObjects; 
            void*m_isEditScenarios; 
            void*m_isChangeCellFormatting; 
            void*m_isChangeColumnFormatting; 
            void*m_isChangeRowFormatting; 
            void*m_isInsertColumns; 
            void*m_isInsertRow; 
            void*m_isInsertHyperlinks; 
            void*m_isDeleteColumns; 
            void*m_isDeleteRows; 
            void*m_isSelectLockedCells; 
            void*m_isSortCellRange; 
            void*m_isEditAutoFilters; 
            void*m_isEditPivotTables; 
            void*m_isSelectUnlockedCells; 
            short m_nPassword; 
        } x62; struct XlCalculationProperties { 
            int (**_vptr$XlCalculationProperties)(); 
            double m_dIncrementMax; 
            NSInteger m_autoRecalcMode; 
            short m_nIterationMax; 
            void*m_isIterationOn; 
            NSInteger m_referenceStyle; 
            void*m_isRecalcSave; 
        } x63; struct XlSortInfo { 
            int (**_vptr$XlSortInfo)(); 
            void*m_isSortLtoR; 
            void*m_isKey1Dsc; 
            void*m_isKey2Dsc; 
            void*m_isKey3Dsc; 
            void*m_isCaseSensitive; 
            void*m_isAltMethod; 
            unsigned char m_bOrderIndex; 
            struct OcText { 
                int (**_vptr$OcText)(); 
                NSInteger m_encoding; 
                NSUInteger m_ulStartCP; 
                NSUInteger m_ulCharacterCount; 
                NSUInteger m_ulBufferSize; 
                char *m_pBuffer; 
                char *m_pTempBuffer; 
                void*m_isMyBuffer; 
            } m_key1String; 
            struct OcText { 
                int (**_vptr$OcText)(); 
                NSInteger m_encoding; 
                NSUInteger m_ulStartCP; 
                NSUInteger m_ulCharacterCount; 
                NSUInteger m_ulBufferSize; 
                char *m_pBuffer; 
                char *m_pTempBuffer; 
                void*m_isMyBuffer; 
            } m_key2String; 
            struct OcText { 
                int (**_vptr$OcText)(); 
                NSInteger m_encoding; 
                NSUInteger m_ulStartCP; 
                NSUInteger m_ulCharacterCount; 
                NSUInteger m_ulBufferSize; 
                char *m_pBuffer; 
                char *m_pTempBuffer; 
                void*m_isMyBuffer; 
            } m_key3String; 
        } x64; struct XlDocumentInfo { 
            int (**_vptr$XlDocumentInfo)(); 
            unsigned short m_unBuildID; 
            unsigned short m_unBuildYear; 
            NSInteger m_lLowestVersion; 
            void*m_isWrittenByWin; 
            void*m_isWrittenByRisc; 
            void*m_isWrittenByBeta; 
            void*m_isEditedByWin; 
            void*m_isEditedByMac; 
            void*m_isEditedByBeta; 
            void*m_isEditedByRisc; 
            void*m_is0x40; 
        } x65; struct XlDocumentProperties { 
            int (**_vptr$XlDocumentProperties)(); 
            unsigned short m_unDateBase; 
            short m_nCodePage; 
            NSInteger m_nCountry; 
            void*m_isExcel9File; 
            void*m_isUsingElfs; 
            void*m_isFullPrecision; 
            void*m_isRefreshAll; 
            void*m_isNoSaveSupp; 
            void*m_hasMailEnvelope; 
            void*m_isMailEnvelopeVisible; 
            void*m_isVBProject; 
            NSInteger m_lRecalcEngineID; 
            short m_nTabCount; 
            short *m_pTabIdTable; 
            struct OcText { 
                int (**_vptr$OcText)(); 
                NSInteger m_encoding; 
                NSUInteger m_ulStartCP; 
                NSUInteger m_ulCharacterCount; 
                NSUInteger m_ulBufferSize; 
                char *m_pBuffer; 
                char *m_pTempBuffer; 
                void*m_isMyBuffer; 
            } m_workbookName; 
            NSInteger m_objectShow; 
            struct XlRef { 
                unsigned short m_nRowFirst; 
                unsigned short m_nRowLast; 
                short m_nColFirst; 
                short m_nColLast; 
                void*m_isCompact; 
            } m_oleSize; 
            void*m_isHaveOleSize; 
        } x66; struct XlDocumentProtection { 
            int (**_vptr$XlDocumentProtection)(); 
            void*m_isLockContent; 
            void*m_isLockWindow; 
            void*m_isLockShare; 
            short m_nPassword; 
            short m_nSharePassword; 
        } x67; struct XlFileProtection { 
            int (**_vptr$XlFileProtection)(); 
            NSInteger m_lFilePassword; 
            void*m_isWriteProtected; 
            void*m_isReadOnlyLoad; 
            short m_nWritePassword; 
            struct OcText { 
                int (**_vptr$OcText)(); 
                NSInteger m_encoding; 
                NSUInteger m_ulStartCP; 
                NSUInteger m_ulCharacterCount; 
                NSUInteger m_ulBufferSize; 
                char *m_pBuffer; 
                char *m_pTempBuffer; 
                void*m_isMyBuffer; 
            } m_creatorName; 
            struct OcText { 
                int (**_vptr$OcText)(); 
                NSInteger m_encoding; 
                NSUInteger m_ulStartCP; 
                NSUInteger m_ulCharacterCount; 
                NSUInteger m_ulBufferSize; 
                char *m_pBuffer; 
                char *m_pTempBuffer; 
                void*m_isMyBuffer; 
            } m_ownerName; 
            char *m_pTempBuffer; 
        } x68; struct XlSubstreamProperties { 
            int (**_vptr$XlSubstreamProperties)(); 
            struct XlSheetInfo { 
                int (**_vptr$XlSheetInfo)(); 
                NSInteger m_substreamType; 
                NSInteger m_lRowBlockCount; 
            } m_subStreamInfo; 
            struct XlPageProperties { 
                int (**_vptr$XlPageProperties)(); 
                double m_dBottomMargin; 
                double m_dTopMargin; 
                double m_dLeftMargin; 
                double m_dRightMargin; 
                struct OcText {} *m_pHeaderString; 
                struct OcText {} *m_pFooterString; 
                void*m_isHorizCentered; 
                void*m_isVertCentered; 
                short m_nPaperSize; 
                short m_nScaleFactor; 
                short m_nPageStartNumber; 
                short m_nPrintFitToWidth; 
                short m_nPrintFitToHeight; 
                void*m_isPrintLeftToRight; 
                NSInteger m_printLandscape; 
                void*m_isPrintNoPls; 
                void*m_isPrintNoColor; 
                void*m_isPrintDraft; 
                void*m_isPrintNotes; 
                void*m_isPrintNoOrient; 
                void*m_isPrintPageNoAuto; 
                short m_nPrintResolution; 
                short m_nPrintVertResolution; 
                short m_nPrintCopyCount; 
                double m_dPrintHeaderMargin; 
                double m_dPrintFooterMargin; 
                short m_nPrintSize; 
            } m_pageInfo; 
            struct XlCellTableInfo { 
                int (**_vptr$XlCellTableInfo)(); 
                NSInteger m_lRowMin; 
                NSInteger m_lRowMax; 
                unsigned short m_unColumnMin; 
                unsigned short m_unColumnMax; 
            } m_cellTableInfo; 
            NSInteger m_lGraphicsLoc; 
            NSInteger m_lEsherLoc; 
        } x69; struct XlRecord {} *x70; struct SsrwOOStream {} *x71; unsigned char x72; struct XlObjectFactory {} *x73; struct XlParserVisitor {} *x74; int (**x75)(); struct EshObjectFactory {} *x76; } *mXlReader;

    struct XlSheetInfoTable { int (**x1)(); struct CsSimpleHeapVector<XlRecord> { 
            struct ChVector<XlRecord*> { 
                struct XlRecord {} **m_vector; 
                struct XlRecord {} **m_tmpVector; 
                NSUInteger m_count; 
                NSUInteger m_size; 
                NSUInteger m_blockSize; 
            } m_pointerVector; 
        } x2; char *x3; } *mXlSheetInfoTable;
    EDSheet *mCurrentSheet;
    ECColumnWidthConvertor *mColumnWidthConvertor;
    NSUInteger mTotalCellsWithContentCount;
    OABState *mOAState;
}


- (id)initWithXlReader:(struct XlBinaryReader { int (**x1)(); int (**x2)(); int (**x3)(); struct EshObjectFactory {} *x4; /* Warning: Unrecognized filer type: 'B' using 'void*' */ void*x5; struct SsrwOORootStorage {} *x6; struct SsrwOOStorage {} *x7; struct XlEshBinaryReader { int (**x_8_1_1)(); struct SsrwOOStream {} *x_8_1_2; struct EshParserVisitor {} *x_8_1_3; struct EshObjectFactory {} *x_8_1_4; NSUInteger x_8_1_5; NSUInteger x_8_1_6; struct ChStack<EshHeader> { struct EshHeader {} *x_7_2_1; struct EshHeader {} *x_7_2_2; NSUInteger x_7_2_3; NSUInteger x_7_2_4; NSUInteger x_7_2_5; } x_8_1_7; NSUInteger x_8_1_8; struct EshHeader { NSInteger x_9_2_1; NSUInteger x_9_2_2; short x_9_2_3; unsigned short x_9_2_4; unsigned char x_9_2_5; } x_8_1_9; void*x_8_1_10; void*x_8_1_11; NSUInteger x_8_1_12; struct XlReadStgStream {} *x_8_1_13; } x8; struct XlStringExtractor {} *x9; struct XlSheetInfoTable {} *x10; NSInteger x11; NSInteger x12; NSInteger x13; NSInteger x14; NSInteger x15; NSInteger x16; NSInteger x17; NSInteger x18; NSInteger x19; NSInteger x20; NSInteger x21; NSInteger x22; NSInteger x23; NSInteger x24; NSInteger x25; NSInteger x26; NSInteger x27; NSInteger x28; NSInteger x29; NSInteger x30; NSInteger x31; NSInteger x32; NSInteger x33; NSInteger x34; NSInteger x35; NSInteger x36; NSInteger x37; NSInteger x38; NSInteger x39; NSInteger x40; NSInteger x41; NSInteger x42; void*x43; void*x44; void*x45; struct ChVector<long int> { long *x_46_1_1; long *x_46_1_2; NSUInteger x_46_1_3; NSUInteger x_46_1_4; NSUInteger x_46_1_5; } x46; struct ChVector<long int> { long *x_47_1_1; long *x_47_1_2; NSUInteger x_47_1_3; NSUInteger x_47_1_4; NSUInteger x_47_1_5; } x47; struct ChVector<long int> { long *x_48_1_1; long *x_48_1_2; NSUInteger x_48_1_3; NSUInteger x_48_1_4; NSUInteger x_48_1_5; } x48; struct XlIndex {} *x49; struct XlRow {} *x50; struct XlRecord {} *x51; NSInteger x52; NSInteger x53; short x54; NSInteger x55; NSInteger x56; struct ChVector<XlCell*> { struct XlCell {} **x_57_1_1; struct XlCell {} **x_57_1_2; NSUInteger x_57_1_3; NSUInteger x_57_1_4; NSUInteger x_57_1_5; } x57; NSInteger x58; unsigned char x59; NSInteger x60; struct XlWorksheetProperties { int (**x_61_1_1)(); unsigned short x_61_1_2; NSInteger x_61_1_3; unsigned short x_61_1_4; void*x_61_1_5; unsigned short x_61_1_6; unsigned short x_61_1_7; unsigned short x_61_1_8; unsigned short x_61_1_9; void*x_61_1_10; void*x_61_1_11; void*x_61_1_12; void*x_61_1_13; void*x_61_1_14; void*x_61_1_15; void*x_61_1_16; void*x_61_1_17; void*x_61_1_18; void*x_61_1_19; void*x_61_1_20; void*x_61_1_21; void*x_61_1_22; void*x_61_1_23; void*x_61_1_24; void*x_61_1_25; short x_61_1_26; struct ChVector<XlBrk*> { struct XlBrk {} **x_27_2_1; struct XlBrk {} **x_27_2_2; NSUInteger x_27_2_3; NSUInteger x_27_2_4; NSUInteger x_27_2_5; } x_61_1_27; struct ChVector<XlBrk*> { struct XlBrk {} **x_28_2_1; struct XlBrk {} **x_28_2_2; NSUInteger x_28_2_3; NSUInteger x_28_2_4; NSUInteger x_28_2_5; } x_61_1_28; struct OcText { int (**x_29_2_1)(); NSInteger x_29_2_2; NSUInteger x_29_2_3; NSUInteger x_29_2_4; NSUInteger x_29_2_5; char *x_29_2_6; char *x_29_2_7; void*x_29_2_8; } x_61_1_29; } x61; struct XlWorksheetProtection { int (**x_62_1_1)(); void*x_62_1_2; void*x_62_1_3; void*x_62_1_4; void*x_62_1_5; void*x_62_1_6; void*x_62_1_7; void*x_62_1_8; void*x_62_1_9; void*x_62_1_10; void*x_62_1_11; void*x_62_1_12; void*x_62_1_13; void*x_62_1_14; void*x_62_1_15; void*x_62_1_16; void*x_62_1_17; void*x_62_1_18; void*x_62_1_19; short x_62_1_20; } x62; struct XlCalculationProperties { int (**x_63_1_1)(); double x_63_1_2; NSInteger x_63_1_3; short x_63_1_4; void*x_63_1_5; NSInteger x_63_1_6; void*x_63_1_7; } x63; struct XlSortInfo { int (**x_64_1_1)(); void*x_64_1_2; void*x_64_1_3; void*x_64_1_4; void*x_64_1_5; void*x_64_1_6; void*x_64_1_7; unsigned char x_64_1_8; struct OcText { int (**x_9_2_1)(); NSInteger x_9_2_2; NSUInteger x_9_2_3; NSUInteger x_9_2_4; NSUInteger x_9_2_5; char *x_9_2_6; char *x_9_2_7; void*x_9_2_8; } x_64_1_9; struct OcText { int (**x_10_2_1)(); NSInteger x_10_2_2; NSUInteger x_10_2_3; NSUInteger x_10_2_4; NSUInteger x_10_2_5; char *x_10_2_6; char *x_10_2_7; void*x_10_2_8; } x_64_1_10; struct OcText { int (**x_11_2_1)(); NSInteger x_11_2_2; NSUInteger x_11_2_3; NSUInteger x_11_2_4; NSUInteger x_11_2_5; char *x_11_2_6; char *x_11_2_7; void*x_11_2_8; } x_64_1_11; } x64; struct XlDocumentInfo { int (**x_65_1_1)(); unsigned short x_65_1_2; unsigned short x_65_1_3; NSInteger x_65_1_4; void*x_65_1_5; void*x_65_1_6; void*x_65_1_7; void*x_65_1_8; void*x_65_1_9; void*x_65_1_10; void*x_65_1_11; void*x_65_1_12; } x65; struct XlDocumentProperties { int (**x_66_1_1)(); unsigned short x_66_1_2; short x_66_1_3; NSInteger x_66_1_4; void*x_66_1_5; void*x_66_1_6; void*x_66_1_7; void*x_66_1_8; void*x_66_1_9; void*x_66_1_10; void*x_66_1_11; void*x_66_1_12; NSInteger x_66_1_13; short x_66_1_14; short *x_66_1_15; struct OcText { int (**x_16_2_1)(); NSInteger x_16_2_2; NSUInteger x_16_2_3; NSUInteger x_16_2_4; NSUInteger x_16_2_5; char *x_16_2_6; char *x_16_2_7; void*x_16_2_8; } x_66_1_16; NSInteger x_66_1_17; struct XlRef { unsigned short x_18_2_1; unsigned short x_18_2_2; short x_18_2_3; short x_18_2_4; void*x_18_2_5; } x_66_1_18; void*x_66_1_19; } x66; struct XlDocumentProtection { int (**x_67_1_1)(); void*x_67_1_2; void*x_67_1_3; void*x_67_1_4; short x_67_1_5; short x_67_1_6; } x67; struct XlFileProtection { int (**x_68_1_1)(); NSInteger x_68_1_2; void*x_68_1_3; void*x_68_1_4; short x_68_1_5; struct OcText { int (**x_6_2_1)(); NSInteger x_6_2_2; NSUInteger x_6_2_3; NSUInteger x_6_2_4; NSUInteger x_6_2_5; char *x_6_2_6; char *x_6_2_7; void*x_6_2_8; } x_68_1_6; struct OcText { int (**x_7_2_1)(); NSInteger x_7_2_2; NSUInteger x_7_2_3; NSUInteger x_7_2_4; NSUInteger x_7_2_5; char *x_7_2_6; char *x_7_2_7; void*x_7_2_8; } x_68_1_7; char *x_68_1_8; } x68; struct XlSubstreamProperties { int (**x_69_1_1)(); struct XlSheetInfo { int (**x_2_2_1)(); NSInteger x_2_2_2; NSInteger x_2_2_3; } x_69_1_2; struct XlPageProperties { int (**x_3_2_1)(); double x_3_2_2; double x_3_2_3; double x_3_2_4; double x_3_2_5; struct OcText {} *x_3_2_6; struct OcText {} *x_3_2_7; void*x_3_2_8; void*x_3_2_9; short x_3_2_10; short x_3_2_11; short x_3_2_12; short x_3_2_13; short x_3_2_14; void*x_3_2_15; NSInteger x_3_2_16; void*x_3_2_17; void*x_3_2_18; void*x_3_2_19; void*x_3_2_20; void*x_3_2_21; void*x_3_2_22; short x_3_2_23; short x_3_2_24; short x_3_2_25; double x_3_2_26; double x_3_2_27; short x_3_2_28; } x_69_1_3; struct XlCellTableInfo { int (**x_4_2_1)(); NSInteger x_4_2_2; NSInteger x_4_2_3; unsigned short x_4_2_4; unsigned short x_4_2_5; } x_69_1_4; NSInteger x_69_1_5; NSInteger x_69_1_6; } x69; struct XlRecord {} *x70; struct SsrwOOStream {} *x71; unsigned char x72; struct XlObjectFactory {} *x73; struct XlParserVisitor {} *x74; int (**x75)(); struct EshObjectFactory {} *x76; }*)arg1;
     /* Encoded args for previous method: @12@0:4^{XlBinaryReader=^^?^^?^^?^{EshObjectFactory}B^{SsrwOORootStorage}^{SsrwOOStorage}{XlEshBinaryReader=^^?^{SsrwOOStream}^{EshParserVisitor}^{EshObjectFactory}II{ChStack<EshHeader>=^{EshHeader}^{EshHeader}III}I{EshHeader=iIsSC}BBI^{XlReadStgStream}}^{XlStringExtractor}^{XlSheetInfoTable}iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiBBB{ChVector<long int>=^l^lIII}{ChVector<long int>=^l^lIII}{ChVector<long int>=^l^lIII}^{XlIndex}^{XlRow}^{XlRecord}iisii{ChVector<XlCell*>=^^{XlCell}^^{XlCell}III}iCi{XlWorksheetProperties=^^?SiSBSSSSBBBBBBBBBBBBBBBBs{ChVector<XlBrk*>=^^{XlBrk}^^{XlBrk}III}{ChVector<XlBrk*>=^^{XlBrk}^^{XlBrk}III}{OcText=^^?iIII**B}}{XlWorksheetProtection=^^?BBBBBBBBBBBBBBBBBBs}{XlCalculationProperties=^^?disBiB}{XlSortInfo=^^?BBBBBBC{OcText=^^?iIII**B}{OcText=^^?iIII**B}{OcText=^^?iIII**B}}{XlDocumentInfo=^^?SSiBBBBBBBB}{XlDocumentProperties=^^?SsiBBBBBBBBis^s{OcText=^^?iIII**B}i{XlRef=SSssB}B}{XlDocumentProtection=^^?BBBss}{XlFileProtection=^^?iBBs{OcText=^^?iIII**B}{OcText=^^?iIII**B}*}{XlSubstreamProperties=^^?{XlSheetInfo=^^?ii}{XlPageProperties=^^?dddd^{OcText}^{OcText}BBsssssBiBBBBBBsssdds}{XlCellTableInfo=^^?iiSS}ii}^{XlRecord}^{SsrwOOStream}C^{XlObjectFactory}^{XlParserVisitor}^^?^{EshObjectFactory}}8 */

- (void)dealloc;
- (struct XlBinaryReader { int (**x1)(); int (**x2)(); int (**x3)(); struct EshObjectFactory {} *x4; /* Warning: Unrecognized filer type: 'B' using 'void*' */ void*x5; struct SsrwOORootStorage {} *x6; struct SsrwOOStorage {} *x7; struct XlEshBinaryReader { int (**x_8_1_1)(); struct SsrwOOStream {} *x_8_1_2; struct EshParserVisitor {} *x_8_1_3; struct EshObjectFactory {} *x_8_1_4; NSUInteger x_8_1_5; NSUInteger x_8_1_6; struct ChStack<EshHeader> { struct EshHeader {} *x_7_2_1; struct EshHeader {} *x_7_2_2; NSUInteger x_7_2_3; NSUInteger x_7_2_4; NSUInteger x_7_2_5; } x_8_1_7; NSUInteger x_8_1_8; struct EshHeader { NSInteger x_9_2_1; NSUInteger x_9_2_2; short x_9_2_3; unsigned short x_9_2_4; unsigned char x_9_2_5; } x_8_1_9; void*x_8_1_10; void*x_8_1_11; NSUInteger x_8_1_12; struct XlReadStgStream {} *x_8_1_13; } x8; struct XlStringExtractor {} *x9; struct XlSheetInfoTable {} *x10; NSInteger x11; NSInteger x12; NSInteger x13; NSInteger x14; NSInteger x15; NSInteger x16; NSInteger x17; NSInteger x18; NSInteger x19; NSInteger x20; NSInteger x21; NSInteger x22; NSInteger x23; NSInteger x24; NSInteger x25; NSInteger x26; NSInteger x27; NSInteger x28; NSInteger x29; NSInteger x30; NSInteger x31; NSInteger x32; NSInteger x33; NSInteger x34; NSInteger x35; NSInteger x36; NSInteger x37; NSInteger x38; NSInteger x39; NSInteger x40; NSInteger x41; NSInteger x42; void*x43; void*x44; void*x45; struct ChVector<long int> { long *x_46_1_1; long *x_46_1_2; NSUInteger x_46_1_3; NSUInteger x_46_1_4; NSUInteger x_46_1_5; } x46; struct ChVector<long int> { long *x_47_1_1; long *x_47_1_2; NSUInteger x_47_1_3; NSUInteger x_47_1_4; NSUInteger x_47_1_5; } x47; struct ChVector<long int> { long *x_48_1_1; long *x_48_1_2; NSUInteger x_48_1_3; NSUInteger x_48_1_4; NSUInteger x_48_1_5; } x48; struct XlIndex {} *x49; struct XlRow {} *x50; struct XlRecord {} *x51; NSInteger x52; NSInteger x53; short x54; NSInteger x55; NSInteger x56; struct ChVector<XlCell*> { struct XlCell {} **x_57_1_1; struct XlCell {} **x_57_1_2; NSUInteger x_57_1_3; NSUInteger x_57_1_4; NSUInteger x_57_1_5; } x57; NSInteger x58; unsigned char x59; NSInteger x60; struct XlWorksheetProperties { int (**x_61_1_1)(); unsigned short x_61_1_2; NSInteger x_61_1_3; unsigned short x_61_1_4; void*x_61_1_5; unsigned short x_61_1_6; unsigned short x_61_1_7; unsigned short x_61_1_8; unsigned short x_61_1_9; void*x_61_1_10; void*x_61_1_11; void*x_61_1_12; void*x_61_1_13; void*x_61_1_14; void*x_61_1_15; void*x_61_1_16; void*x_61_1_17; void*x_61_1_18; void*x_61_1_19; void*x_61_1_20; void*x_61_1_21; void*x_61_1_22; void*x_61_1_23; void*x_61_1_24; void*x_61_1_25; short x_61_1_26; struct ChVector<XlBrk*> { struct XlBrk {} **x_27_2_1; struct XlBrk {} **x_27_2_2; NSUInteger x_27_2_3; NSUInteger x_27_2_4; NSUInteger x_27_2_5; } x_61_1_27; struct ChVector<XlBrk*> { struct XlBrk {} **x_28_2_1; struct XlBrk {} **x_28_2_2; NSUInteger x_28_2_3; NSUInteger x_28_2_4; NSUInteger x_28_2_5; } x_61_1_28; struct OcText { int (**x_29_2_1)(); NSInteger x_29_2_2; NSUInteger x_29_2_3; NSUInteger x_29_2_4; NSUInteger x_29_2_5; char *x_29_2_6; char *x_29_2_7; void*x_29_2_8; } x_61_1_29; } x61; struct XlWorksheetProtection { int (**x_62_1_1)(); void*x_62_1_2; void*x_62_1_3; void*x_62_1_4; void*x_62_1_5; void*x_62_1_6; void*x_62_1_7; void*x_62_1_8; void*x_62_1_9; void*x_62_1_10; void*x_62_1_11; void*x_62_1_12; void*x_62_1_13; void*x_62_1_14; void*x_62_1_15; void*x_62_1_16; void*x_62_1_17; void*x_62_1_18; void*x_62_1_19; short x_62_1_20; } x62; struct XlCalculationProperties { int (**x_63_1_1)(); double x_63_1_2; NSInteger x_63_1_3; short x_63_1_4; void*x_63_1_5; NSInteger x_63_1_6; void*x_63_1_7; } x63; struct XlSortInfo { int (**x_64_1_1)(); void*x_64_1_2; void*x_64_1_3; void*x_64_1_4; void*x_64_1_5; void*x_64_1_6; void*x_64_1_7; unsigned char x_64_1_8; struct OcText { int (**x_9_2_1)(); NSInteger x_9_2_2; NSUInteger x_9_2_3; NSUInteger x_9_2_4; NSUInteger x_9_2_5; char *x_9_2_6; char *x_9_2_7; void*x_9_2_8; } x_64_1_9; struct OcText { int (**x_10_2_1)(); NSInteger x_10_2_2; NSUInteger x_10_2_3; NSUInteger x_10_2_4; NSUInteger x_10_2_5; char *x_10_2_6; char *x_10_2_7; void*x_10_2_8; } x_64_1_10; struct OcText { int (**x_11_2_1)(); NSInteger x_11_2_2; NSUInteger x_11_2_3; NSUInteger x_11_2_4; NSUInteger x_11_2_5; char *x_11_2_6; char *x_11_2_7; void*x_11_2_8; } x_64_1_11; } x64; struct XlDocumentInfo { int (**x_65_1_1)(); unsigned short x_65_1_2; unsigned short x_65_1_3; NSInteger x_65_1_4; void*x_65_1_5; void*x_65_1_6; void*x_65_1_7; void*x_65_1_8; void*x_65_1_9; void*x_65_1_10; void*x_65_1_11; void*x_65_1_12; } x65; struct XlDocumentProperties { int (**x_66_1_1)(); unsigned short x_66_1_2; short x_66_1_3; NSInteger x_66_1_4; void*x_66_1_5; void*x_66_1_6; void*x_66_1_7; void*x_66_1_8; void*x_66_1_9; void*x_66_1_10; void*x_66_1_11; void*x_66_1_12; NSInteger x_66_1_13; short x_66_1_14; short *x_66_1_15; struct OcText { int (**x_16_2_1)(); NSInteger x_16_2_2; NSUInteger x_16_2_3; NSUInteger x_16_2_4; NSUInteger x_16_2_5; char *x_16_2_6; char *x_16_2_7; void*x_16_2_8; } x_66_1_16; NSInteger x_66_1_17; struct XlRef { unsigned short x_18_2_1; unsigned short x_18_2_2; short x_18_2_3; short x_18_2_4; void*x_18_2_5; } x_66_1_18; void*x_66_1_19; } x66; struct XlDocumentProtection { int (**x_67_1_1)(); void*x_67_1_2; void*x_67_1_3; void*x_67_1_4; short x_67_1_5; short x_67_1_6; } x67; struct XlFileProtection { int (**x_68_1_1)(); NSInteger x_68_1_2; void*x_68_1_3; void*x_68_1_4; short x_68_1_5; struct OcText { int (**x_6_2_1)(); NSInteger x_6_2_2; NSUInteger x_6_2_3; NSUInteger x_6_2_4; NSUInteger x_6_2_5; char *x_6_2_6; char *x_6_2_7; void*x_6_2_8; } x_68_1_6; struct OcText { int (**x_7_2_1)(); NSInteger x_7_2_2; NSUInteger x_7_2_3; NSUInteger x_7_2_4; NSUInteger x_7_2_5; char *x_7_2_6; char *x_7_2_7; void*x_7_2_8; } x_68_1_7; char *x_68_1_8; } x68; struct XlSubstreamProperties { int (**x_69_1_1)(); struct XlSheetInfo { int (**x_2_2_1)(); NSInteger x_2_2_2; NSInteger x_2_2_3; } x_69_1_2; struct XlPageProperties { int (**x_3_2_1)(); double x_3_2_2; double x_3_2_3; double x_3_2_4; double x_3_2_5; struct OcText {} *x_3_2_6; struct OcText {} *x_3_2_7; void*x_3_2_8; void*x_3_2_9; short x_3_2_10; short x_3_2_11; short x_3_2_12; short x_3_2_13; short x_3_2_14; void*x_3_2_15; NSInteger x_3_2_16; void*x_3_2_17; void*x_3_2_18; void*x_3_2_19; void*x_3_2_20; void*x_3_2_21; void*x_3_2_22; short x_3_2_23; short x_3_2_24; short x_3_2_25; double x_3_2_26; double x_3_2_27; short x_3_2_28; } x_69_1_3; struct XlCellTableInfo { int (**x_4_2_1)(); NSInteger x_4_2_2; NSInteger x_4_2_3; unsigned short x_4_2_4; unsigned short x_4_2_5; } x_69_1_4; NSInteger x_69_1_5; NSInteger x_69_1_6; } x69; struct XlRecord {} *x70; struct SsrwOOStream {} *x71; unsigned char x72; struct XlObjectFactory {} *x73; struct XlParserVisitor {} *x74; int (**x75)(); struct EshObjectFactory {} *x76; }*)xlReader;
     /* Encoded args for previous method: ^{XlBinaryReader=^^?^^?^^?^{EshObjectFactory}B^{SsrwOORootStorage}^{SsrwOOStorage}{XlEshBinaryReader=^^?^{SsrwOOStream}^{EshParserVisitor}^{EshObjectFactory}II{ChStack<EshHeader>=^{EshHeader}^{EshHeader}III}I{EshHeader=iIsSC}BBI^{XlReadStgStream}}^{XlStringExtractor}^{XlSheetInfoTable}iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiBBB{ChVector<long int>=^l^lIII}{ChVector<long int>=^l^lIII}{ChVector<long int>=^l^lIII}^{XlIndex}^{XlRow}^{XlRecord}iisii{ChVector<XlCell*>=^^{XlCell}^^{XlCell}III}iCi{XlWorksheetProperties=^^?SiSBSSSSBBBBBBBBBBBBBBBBs{ChVector<XlBrk*>=^^{XlBrk}^^{XlBrk}III}{ChVector<XlBrk*>=^^{XlBrk}^^{XlBrk}III}{OcText=^^?iIII**B}}{XlWorksheetProtection=^^?BBBBBBBBBBBBBBBBBBs}{XlCalculationProperties=^^?disBiB}{XlSortInfo=^^?BBBBBBC{OcText=^^?iIII**B}{OcText=^^?iIII**B}{OcText=^^?iIII**B}}{XlDocumentInfo=^^?SSiBBBBBBBB}{XlDocumentProperties=^^?SsiBBBBBBBBis^s{OcText=^^?iIII**B}i{XlRef=SSssB}B}{XlDocumentProtection=^^?BBBss}{XlFileProtection=^^?iBBs{OcText=^^?iIII**B}{OcText=^^?iIII**B}*}{XlSubstreamProperties=^^?{XlSheetInfo=^^?ii}{XlPageProperties=^^?dddd^{OcText}^{OcText}BBsssssBiBBBBBBsssdds}{XlCellTableInfo=^^?iiSS}ii}^{XlRecord}^{SsrwOOStream}C^{XlObjectFactory}^{XlParserVisitor}^^?^{EshObjectFactory}}8@0:4 */

- (void)setXlReader:(struct XlBinaryReader { int (**x1)(); int (**x2)(); int (**x3)(); struct EshObjectFactory {} *x4; /* Warning: Unrecognized filer type: 'B' using 'void*' */ void*x5; struct SsrwOORootStorage {} *x6; struct SsrwOOStorage {} *x7; struct XlEshBinaryReader { int (**x_8_1_1)(); struct SsrwOOStream {} *x_8_1_2; struct EshParserVisitor {} *x_8_1_3; struct EshObjectFactory {} *x_8_1_4; NSUInteger x_8_1_5; NSUInteger x_8_1_6; struct ChStack<EshHeader> { struct EshHeader {} *x_7_2_1; struct EshHeader {} *x_7_2_2; NSUInteger x_7_2_3; NSUInteger x_7_2_4; NSUInteger x_7_2_5; } x_8_1_7; NSUInteger x_8_1_8; struct EshHeader { NSInteger x_9_2_1; NSUInteger x_9_2_2; short x_9_2_3; unsigned short x_9_2_4; unsigned char x_9_2_5; } x_8_1_9; void*x_8_1_10; void*x_8_1_11; NSUInteger x_8_1_12; struct XlReadStgStream {} *x_8_1_13; } x8; struct XlStringExtractor {} *x9; struct XlSheetInfoTable {} *x10; NSInteger x11; NSInteger x12; NSInteger x13; NSInteger x14; NSInteger x15; NSInteger x16; NSInteger x17; NSInteger x18; NSInteger x19; NSInteger x20; NSInteger x21; NSInteger x22; NSInteger x23; NSInteger x24; NSInteger x25; NSInteger x26; NSInteger x27; NSInteger x28; NSInteger x29; NSInteger x30; NSInteger x31; NSInteger x32; NSInteger x33; NSInteger x34; NSInteger x35; NSInteger x36; NSInteger x37; NSInteger x38; NSInteger x39; NSInteger x40; NSInteger x41; NSInteger x42; void*x43; void*x44; void*x45; struct ChVector<long int> { long *x_46_1_1; long *x_46_1_2; NSUInteger x_46_1_3; NSUInteger x_46_1_4; NSUInteger x_46_1_5; } x46; struct ChVector<long int> { long *x_47_1_1; long *x_47_1_2; NSUInteger x_47_1_3; NSUInteger x_47_1_4; NSUInteger x_47_1_5; } x47; struct ChVector<long int> { long *x_48_1_1; long *x_48_1_2; NSUInteger x_48_1_3; NSUInteger x_48_1_4; NSUInteger x_48_1_5; } x48; struct XlIndex {} *x49; struct XlRow {} *x50; struct XlRecord {} *x51; NSInteger x52; NSInteger x53; short x54; NSInteger x55; NSInteger x56; struct ChVector<XlCell*> { struct XlCell {} **x_57_1_1; struct XlCell {} **x_57_1_2; NSUInteger x_57_1_3; NSUInteger x_57_1_4; NSUInteger x_57_1_5; } x57; NSInteger x58; unsigned char x59; NSInteger x60; struct XlWorksheetProperties { int (**x_61_1_1)(); unsigned short x_61_1_2; NSInteger x_61_1_3; unsigned short x_61_1_4; void*x_61_1_5; unsigned short x_61_1_6; unsigned short x_61_1_7; unsigned short x_61_1_8; unsigned short x_61_1_9; void*x_61_1_10; void*x_61_1_11; void*x_61_1_12; void*x_61_1_13; void*x_61_1_14; void*x_61_1_15; void*x_61_1_16; void*x_61_1_17; void*x_61_1_18; void*x_61_1_19; void*x_61_1_20; void*x_61_1_21; void*x_61_1_22; void*x_61_1_23; void*x_61_1_24; void*x_61_1_25; short x_61_1_26; struct ChVector<XlBrk*> { struct XlBrk {} **x_27_2_1; struct XlBrk {} **x_27_2_2; NSUInteger x_27_2_3; NSUInteger x_27_2_4; NSUInteger x_27_2_5; } x_61_1_27; struct ChVector<XlBrk*> { struct XlBrk {} **x_28_2_1; struct XlBrk {} **x_28_2_2; NSUInteger x_28_2_3; NSUInteger x_28_2_4; NSUInteger x_28_2_5; } x_61_1_28; struct OcText { int (**x_29_2_1)(); NSInteger x_29_2_2; NSUInteger x_29_2_3; NSUInteger x_29_2_4; NSUInteger x_29_2_5; char *x_29_2_6; char *x_29_2_7; void*x_29_2_8; } x_61_1_29; } x61; struct XlWorksheetProtection { int (**x_62_1_1)(); void*x_62_1_2; void*x_62_1_3; void*x_62_1_4; void*x_62_1_5; void*x_62_1_6; void*x_62_1_7; void*x_62_1_8; void*x_62_1_9; void*x_62_1_10; void*x_62_1_11; void*x_62_1_12; void*x_62_1_13; void*x_62_1_14; void*x_62_1_15; void*x_62_1_16; void*x_62_1_17; void*x_62_1_18; void*x_62_1_19; short x_62_1_20; } x62; struct XlCalculationProperties { int (**x_63_1_1)(); double x_63_1_2; NSInteger x_63_1_3; short x_63_1_4; void*x_63_1_5; NSInteger x_63_1_6; void*x_63_1_7; } x63; struct XlSortInfo { int (**x_64_1_1)(); void*x_64_1_2; void*x_64_1_3; void*x_64_1_4; void*x_64_1_5; void*x_64_1_6; void*x_64_1_7; unsigned char x_64_1_8; struct OcText { int (**x_9_2_1)(); NSInteger x_9_2_2; NSUInteger x_9_2_3; NSUInteger x_9_2_4; NSUInteger x_9_2_5; char *x_9_2_6; char *x_9_2_7; void*x_9_2_8; } x_64_1_9; struct OcText { int (**x_10_2_1)(); NSInteger x_10_2_2; NSUInteger x_10_2_3; NSUInteger x_10_2_4; NSUInteger x_10_2_5; char *x_10_2_6; char *x_10_2_7; void*x_10_2_8; } x_64_1_10; struct OcText { int (**x_11_2_1)(); NSInteger x_11_2_2; NSUInteger x_11_2_3; NSUInteger x_11_2_4; NSUInteger x_11_2_5; char *x_11_2_6; char *x_11_2_7; void*x_11_2_8; } x_64_1_11; } x64; struct XlDocumentInfo { int (**x_65_1_1)(); unsigned short x_65_1_2; unsigned short x_65_1_3; NSInteger x_65_1_4; void*x_65_1_5; void*x_65_1_6; void*x_65_1_7; void*x_65_1_8; void*x_65_1_9; void*x_65_1_10; void*x_65_1_11; void*x_65_1_12; } x65; struct XlDocumentProperties { int (**x_66_1_1)(); unsigned short x_66_1_2; short x_66_1_3; NSInteger x_66_1_4; void*x_66_1_5; void*x_66_1_6; void*x_66_1_7; void*x_66_1_8; void*x_66_1_9; void*x_66_1_10; void*x_66_1_11; void*x_66_1_12; NSInteger x_66_1_13; short x_66_1_14; short *x_66_1_15; struct OcText { int (**x_16_2_1)(); NSInteger x_16_2_2; NSUInteger x_16_2_3; NSUInteger x_16_2_4; NSUInteger x_16_2_5; char *x_16_2_6; char *x_16_2_7; void*x_16_2_8; } x_66_1_16; NSInteger x_66_1_17; struct XlRef { unsigned short x_18_2_1; unsigned short x_18_2_2; short x_18_2_3; short x_18_2_4; void*x_18_2_5; } x_66_1_18; void*x_66_1_19; } x66; struct XlDocumentProtection { int (**x_67_1_1)(); void*x_67_1_2; void*x_67_1_3; void*x_67_1_4; short x_67_1_5; short x_67_1_6; } x67; struct XlFileProtection { int (**x_68_1_1)(); NSInteger x_68_1_2; void*x_68_1_3; void*x_68_1_4; short x_68_1_5; struct OcText { int (**x_6_2_1)(); NSInteger x_6_2_2; NSUInteger x_6_2_3; NSUInteger x_6_2_4; NSUInteger x_6_2_5; char *x_6_2_6; char *x_6_2_7; void*x_6_2_8; } x_68_1_6; struct OcText { int (**x_7_2_1)(); NSInteger x_7_2_2; NSUInteger x_7_2_3; NSUInteger x_7_2_4; NSUInteger x_7_2_5; char *x_7_2_6; char *x_7_2_7; void*x_7_2_8; } x_68_1_7; char *x_68_1_8; } x68; struct XlSubstreamProperties { int (**x_69_1_1)(); struct XlSheetInfo { int (**x_2_2_1)(); NSInteger x_2_2_2; NSInteger x_2_2_3; } x_69_1_2; struct XlPageProperties { int (**x_3_2_1)(); double x_3_2_2; double x_3_2_3; double x_3_2_4; double x_3_2_5; struct OcText {} *x_3_2_6; struct OcText {} *x_3_2_7; void*x_3_2_8; void*x_3_2_9; short x_3_2_10; short x_3_2_11; short x_3_2_12; short x_3_2_13; short x_3_2_14; void*x_3_2_15; NSInteger x_3_2_16; void*x_3_2_17; void*x_3_2_18; void*x_3_2_19; void*x_3_2_20; void*x_3_2_21; void*x_3_2_22; short x_3_2_23; short x_3_2_24; short x_3_2_25; double x_3_2_26; double x_3_2_27; short x_3_2_28; } x_69_1_3; struct XlCellTableInfo { int (**x_4_2_1)(); NSInteger x_4_2_2; NSInteger x_4_2_3; unsigned short x_4_2_4; unsigned short x_4_2_5; } x_69_1_4; NSInteger x_69_1_5; NSInteger x_69_1_6; } x69; struct XlRecord {} *x70; struct SsrwOOStream {} *x71; unsigned char x72; struct XlObjectFactory {} *x73; struct XlParserVisitor {} *x74; int (**x75)(); struct EshObjectFactory {} *x76; }*)arg1;
     /* Encoded args for previous method: v12@0:4^{XlBinaryReader=^^?^^?^^?^{EshObjectFactory}B^{SsrwOORootStorage}^{SsrwOOStorage}{XlEshBinaryReader=^^?^{SsrwOOStream}^{EshParserVisitor}^{EshObjectFactory}II{ChStack<EshHeader>=^{EshHeader}^{EshHeader}III}I{EshHeader=iIsSC}BBI^{XlReadStgStream}}^{XlStringExtractor}^{XlSheetInfoTable}iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiBBB{ChVector<long int>=^l^lIII}{ChVector<long int>=^l^lIII}{ChVector<long int>=^l^lIII}^{XlIndex}^{XlRow}^{XlRecord}iisii{ChVector<XlCell*>=^^{XlCell}^^{XlCell}III}iCi{XlWorksheetProperties=^^?SiSBSSSSBBBBBBBBBBBBBBBBs{ChVector<XlBrk*>=^^{XlBrk}^^{XlBrk}III}{ChVector<XlBrk*>=^^{XlBrk}^^{XlBrk}III}{OcText=^^?iIII**B}}{XlWorksheetProtection=^^?BBBBBBBBBBBBBBBBBBs}{XlCalculationProperties=^^?disBiB}{XlSortInfo=^^?BBBBBBC{OcText=^^?iIII**B}{OcText=^^?iIII**B}{OcText=^^?iIII**B}}{XlDocumentInfo=^^?SSiBBBBBBBB}{XlDocumentProperties=^^?SsiBBBBBBBBis^s{OcText=^^?iIII**B}i{XlRef=SSssB}B}{XlDocumentProtection=^^?BBBss}{XlFileProtection=^^?iBBs{OcText=^^?iIII**B}{OcText=^^?iIII**B}*}{XlSubstreamProperties=^^?{XlSheetInfo=^^?ii}{XlPageProperties=^^?dddd^{OcText}^{OcText}BBsssssBiBBBBBBsssdds}{XlCellTableInfo=^^?iiSS}ii}^{XlRecord}^{SsrwOOStream}C^{XlObjectFactory}^{XlParserVisitor}^^?^{EshObjectFactory}}8 */

- (void)readGlobalXlObjects;
- (struct XlSheetInfoTable { int (**x1)(); struct CsSimpleHeapVector<XlRecord> { struct ChVector<XlRecord*> { struct XlRecord {} **x_1_2_1; struct XlRecord {} **x_1_2_2; NSUInteger x_1_2_3; NSUInteger x_1_2_4; NSUInteger x_1_2_5; } x_2_1_1; } x2; char *x3; }*)xlSheetInfoTable;
- (id)currentSheet;
- (void)setCurrentSheet:(id)arg1;
- (id)columnWidthConvertor;
- (void)incrementCellWithContentCount;
- (id)oaState;

@end
